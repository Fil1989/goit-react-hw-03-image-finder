{"version":3,"sources":["components/Searchbar.jsx","components/ImageGalleryItem.jsx","components/ImageGallery.jsx","serverApi.js","components/Button.jsx","components/Modal.jsx","App.js","index.js"],"names":["Searchbar","onChange","onSubmit","className","type","autoComplete","autoFocus","placeholder","name","ImageGalleryItem","array","onModalOpen","map","element","src","webformatURL","alt","tags","onClick","id","ImageGallery","fetchThePictures","page","query","fetchFunction","axios","defaults","baseURL","this","get","incrementOfPage","resetPage","setQuery","e","currentTarget","value","Button","props","onLoadMore","Component","Modal","imageSrc","closeModal","App","state","search","modal","open","loading","scroll","button","handleChange","setState","target","handleSubmit","preventDefault","then","res","data","hits","catch","error","console","log","handleLoadMore","document","documentElement","scrollHeight","prevState","window","scrollTo","top","behavior","handleModalOpen","handleCloseModal","dir","nodeName","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c2539b0.chunk.js","sourcesContent":["import SearchIcon from \"@material-ui/icons/Search\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = ({ onChange, onSubmit }) => {\r\n  return (\r\n    <>\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n            <SearchIcon />\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={onChange}\r\n            name=\"search\"\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\nSearchbar.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ array, onModalOpen }) => {\r\n  return (\r\n    <>\r\n      {array.map((element) => (\r\n        <li key={element.id} className=\"ImageGalleryItem\">\r\n          <img\r\n            src={element.webformatURL}\r\n            alt={element.tags}\r\n            className=\"ImageGalleryItem-image\"\r\n            onClick={onModalOpen}\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nImageGalleryItem.propTypes = {\r\n  array: PropTypes.array.isRequired,\r\n  onModalOpen: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ array, onModalOpen }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem array={array} onModalOpen={onModalOpen} />\r\n    </ul>\r\n  );\r\n};\r\nImageGallery.propTypes = {\r\n  array: PropTypes.array.isRequired,\r\n  onModalOpen: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import axios from \"axios\";\r\n\r\nconst fetchThePictures = {\r\n  page: 1,\r\n  query: \"\",\r\n  fetchFunction() {\r\n    axios.defaults.baseURL = \"https://pixabay.com/api\";\r\n    if (this.query !== \"\") {\r\n      return axios.get(\r\n        `/?key=20277592-c9806cff80bff398502402406&q=${this.query}&page=${this.page}&image_type=photo&orientation=horizontal&per_page=12`\r\n      );\r\n    } else {\r\n      return axios.get(\r\n        `/?key=20277592-c9806cff80bff398502402406&q=nhugyftrdyukghl&page=${this.page}&image_type=photo&orientation=horizontal&per_page=12`\r\n      );\r\n    }\r\n  },\r\n  incrementOfPage() {\r\n    this.page += 1;\r\n  },\r\n  resetPage() {\r\n    this.page = 1;\r\n  },\r\n  setQuery(e) {\r\n    this.query = e.currentTarget[1].value;\r\n  },\r\n};\r\nexport default fetchThePictures;\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from \"react\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button type=\"button\" onClick={this.props.onLoadMore} className=\"Button\">\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\nButton.propTypes = {\r\n    onLoadMore: PropTypes.func.isRequired,\r\n}\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Modal = ({ imageSrc, alt, closeModal }) => {\r\n  return (\r\n    <div className=\"Overlay\" onClick={closeModal}>\r\n      <div className=\"Modal\">\r\n        <img src={imageSrc} alt={alt} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  imageSrc: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\nexport default Modal;\r\n","import { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport fetchThePictures from \"./serverApi\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\nimport Loader from \"react-loader-spinner\";\n\nclass App extends Component {\n  state = {\n    search: \"\",\n    array: [],\n    modal: {\n      open: false,\n      imageSrc: \"\",\n    },\n    loading: false,\n    scroll: 0,\n    button: false,\n  };\n\n  handleChange = (e) => {\n    this.setState({ search: e.target.value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetchThePictures.resetPage();\n    fetchThePictures.setQuery(e);\n    this.setState({ loading: true });\n\n    fetchThePictures\n      .fetchFunction()\n      .then((res) => {\n        this.setState({ array: res.data.hits, loading: false, button: true });\n      })\n      .catch((error) => console.log(error));\n  };\n  handleLoadMore = () => {\n    fetchThePictures.incrementOfPage();\n    this.setState({\n      loading: true,\n      scroll: document.documentElement.scrollHeight,\n    });\n    fetchThePictures\n      .fetchFunction()\n      .then((res) => {\n        this.setState((prevState) => ({\n          array: [...prevState.array, ...res.data.hits],\n        }));\n        window.scrollTo({\n          top: this.state.scroll - 190,\n          behavior: \"smooth\",\n        });\n        this.setState({ loading: false });\n      })\n      .catch((error) => console.log(error));\n  };\n  handleModalOpen = (e) => {\n    this.setState({\n      modal: { open: true, imageSrc: e.target.src, alt: e.target.alt },\n    });\n  };\n  handleCloseModal = (e) => {\n    console.dir(e.target);\n    if (e.target.nodeName !== \"IMG\") {\n      this.setState({\n        modal: { open: false },\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar\n          onChange={this.handleChange}\n          search={this.state.search}\n          onSubmit={this.handleSubmit}\n        />\n\n        <ImageGallery\n          array={this.state.array}\n          onModalOpen={this.handleModalOpen}\n        />\n        <section className=\"spinner\">\n          {this.state.loading && (\n            <Loader type=\"Hearts\" color=\"#00BFFF\" height={100} width={100} />\n          )}\n        </section>\n\n        {this.state.button && !!this.state.array.length && (\n          <Button onLoadMore={this.handleLoadMore} />\n        )}\n\n        {this.state.modal.open && (\n          <Modal\n            imageSrc={this.state.modal.imageSrc}\n            alt={this.state.modal.alt}\n            closeModal={this.handleCloseModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}